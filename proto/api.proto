syntax = "proto3";

package portfolio;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "proto/blogs/rss_feed.proto";
import "proto/blogs/blog.proto";

option go_package = "/api;api_pb";
option ruby_package = "ApiPb";

service PortfolioBackendApi {
  // For RSS Feed ========================
  rpc CreateRSSFeed(portfolio.blogs.CreateRSSFeedRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/rss_feeds"
    };
  }

  rpc BatchGetRSSFeeds(google.protobuf.Empty) returns (portfolio.blogs.BatchGetRSSFeedsResponse) {
    option (google.api.http) = {
      get: "/rss_feeds"
    };
  }

  rpc GetRSSFeed(portfolio.blogs.GetRSSFeedRequest) returns (portfolio.blogs.GetRSSFeedResponse) {
    option (google.api.http) = {
      get: "/rss_feed/{id}"
    };
  }

  rpc DeleteRSSFeed(portfolio.blogs.DeleteRSSFeedRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/rss_feed/{id}"
    };
  }
  // For RSS Feed ========================

  // For Blog ============================
  rpc CreateBlog(portfolio.blogs.CreateBlogRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/blogs"
    };
  }

  rpc BatchGetBlogs(google.protobuf.Empty) returns (portfolio.blogs.BatchGetBlogsResponse) {
    option (google.api.http) = {
      get: "/blogs"
    };
  }

  rpc GetBlog(portfolio.blogs.GetBlogRequest) returns (portfolio.blogs.GetBlogResponse) {
    option (google.api.http) = {
      get: "/blogs/{id}"
    };
  }

  rpc DeleteBlog(portfolio.blogs.DeleteBlogRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/blogs/{id}"
    };
  }
  // For Blog ============================
}
